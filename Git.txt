[Git]

windows download: http://code.google.com/p/msysgit/downloads/list

[在github上搭建blog]
你必须先安装了git, 并且有github的账号
在电脑上创建目录，mkdir c:/github_blog
对该目录进行git初始化，cd c:/github_blog
git init
然后，创建一个没有父节点的分支gh-pages.github规定，只有该分支中得页面，才会生成网页文件。
git checkout --orphan gh-pages
以下所有动作，都在该分支下完成。
第二步，创建设置文件。
在项目根目录下，建立一个_config.yml的文本文件。它是设置文件，我们在里面填入如下内容：
baseurl: c:/github_blog
第三步，创建模板文件。
在项目根目录下，创建一个_layouts目录，用于存放模板文件。
mkdir _layouts
进入该目录，创建一个default.html文件，作为Blog的默认模板。并填入：
<!DOCTYPE html>
<html>
.....
Jekyll使用Liauid模板语言，{{ page.title }}表示文章标题，{{ content }}表示文章内容，更多模板变量参考官方文档：https://github.com/mojombo/jekyll/wiki/Template-Data
第四步，创建文章。
回到项目根目录，创建一个_posts目录，用于存放blog文章。
进入该目录，创建第一篇文章。文章就是普通的文本文件，文件名假定为2013-03-28-hello-world.html
注意，文件名必须为“年-月-日-文章标题.后缀名”的格式。如果网页代码采用html格式，后缀名为html；如果采用markdown格式，后缀名为md。
在该文件中，填入以下内容：（注意，行首不能有空格）
---
layout: default
title: 你好，世界
---
<h2>{{ page.title }}</h2>
<p>我的第一篇文章</p>
<p>{{ page.date | date_to_string }}</p>

每篇文章的头部，必须有一个yaml文件头，用来设置一些元数据。
它用三根短划线“---”，标记开始和结束，里面每一行设置一种元数据。
"layout: default", 表示该文章的模板使用_layouts目录下的default.html文件；
"title: 你好，世界", 表示该文章的标题是“你好，世界”。如果不设置这个值，默认使用嵌入文件名的标题，即“hello world”。
在yaml文件头后面，就是文章的正式内容，里面可以使用模板变量。
{{ page.title }}就是文件头中设置的“你好，世界”， {{ page.date }}则是嵌入文件名的日期（也可以在文件头重新定义date变量），"| date_to_string"表示将page.date变量转化成人类可读的格式。
第五步，创建首页。
有了文章以后，还需要一个首页。
回到根目录，创建一个index.html文件，填入以下内容。
---
layout: default
title: 我的Blog
---
<h2>{{ page.title }}</h2>
....
它的Yaml文件头表示，首页使用default模板，标题为“我的Blog”。然后，首页使用了{%	for post in site.posts	%}
表示对所有帖子进行一个遍历。这里要注意的是，Liquid模板语言规定，输出内容使用两层大括号，单纯的命令使用一层大括号。
至于{{ site.baseurl }}就是_config.yml中设置的baseurl变量。
第六步，发布内容。
现在，这个简单的Blog就可以发布了。
先把所有内容加入本地git库。
git add .
git commit -m "first post"
然后，前往github的网站，创建一个名为github_blog的库，
接着，再将本地内容推送到github上你刚创建的库。
git remote add origin https://github.com/mahongyan/github_blog.git
git push origin gh-pages
上传成功之后，等10分钟左右，访问http://mahongyan.github.com/github_blog